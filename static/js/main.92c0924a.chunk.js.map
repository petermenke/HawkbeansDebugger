{"version":3,"sources":["components/CollapseItem/CollapseItem.js","components/ConstantPool/ConstantPool.js","components/FieldItem/FieldItem.js","components/Fields/Fields.js","components/CodeItem/CodeItem.js","components/MethodItem/MethodItem.js","components/Methods/Methods.js","components/ClassItem/ClassItem.js","components/ClassSection/ClassSection.js","models/ExecutingInstruction/ExecutingInstruction.js","models/Stack/Stack.js","models/Stack/StackFrame.js","components/Stack/StackFrameComponent.js","components/Stack/StackComponent.js","App.js","index.js"],"names":["CollapseItem","state","open","onClickTitle","bind","this","setState","Card","bg","href","className","onClick","e","preventDefault","Header","props","active","title","Body","Collapse","in","children","React","Component","TAGS","7","9","10","11","8","3","4","5","6","12","1","15","16","18","ConstantPool","resolveUTF8","resolveClass","resolveNameAndType","idx","data","find","i","item","b","ArrayBuffer","v","DataView","setInt32","getFloat32","map","c","key","convertToFloat","FieldItem","updatedValue","prevProps","event","renderValue","Fields","length","f","CodeItem","myRef","createRef","classNameStr","methodNameStr","instructionRefs","id","ref","executingInstruction","d","toString","join","MethodItem","Methods","m","ClassItem","ClassSection","classes","ExecutingInstruction","pc","methodName","methodDesc","diff","Stack","stack","frame","push","pop","StackFrame","numLocals","args","numArgs","locals","opStack","a","type","index","value","l","StackFrameComponent","s","StackComponent","frames","getFrames","App","instructions","counter","eventsToDispatch","classEvent","stackEvent","mode","stopped","program","programs","name","content","EmptyDemo","FibonacciRec","FibonacciIter","MathDemo","StringDemo","stackCounter","onExecuteClick","onDispatchClick","dispatchOneEvent","advanceInstruction","dispatchAllEvents","onContinueClick","onFinishMethodClick","onCancelClick","doOneInstruction","reset","doInitialEvents","console","log","_","callback","ToastsStore","success","currentFrame","localToUpdate","error","eventsCopy","shift","setTimeout","resolve","fun","instr","current","scrollIntoView","block","behavior","self","Promise","reject","Row","noGutters","style","height","paddingTop","Col","float","marginLeft","Dropdown","as","ButtonGroup","marginRight","Button","disabled","variant","Toggle","split","Menu","Item","DropdownButton","p","loadProgram","width","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92c0924a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass CollapseItem extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        }\r\n\r\n        this.onClickTitle = this.onClickTitle.bind(this);\r\n    }\r\n\r\n    onClickTitle() {\r\n        this.setState({open: !this.state.open});\r\n    }\r\n\r\n    render() {\r\n        \r\n        return <Card bg=\"light\"  >\r\n                <a href=\"#\" className=\"noLinkStyle\" onClick={e => e.preventDefault()}><Card.Header onClick={this.onClickTitle}>\r\n                    <div \r\n                        className={(this.props.active ? \"active\" : \"\")}\r\n                    >{this.props.title}</div>\r\n                </Card.Header></a>\r\n\r\n                <Card.Body className=\"cardBody\">\r\n                    <div className=\"collapseContainer\">\r\n                        <Collapse in={!!this.state.open || !!this.props.active}>\r\n                            <div>{this.props.children}</div>\r\n                        </Collapse>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n    }\r\n}\r\n\r\nexport default CollapseItem;","import React from 'react';\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nconst CONSTANT_Class = 7;\r\nconst CONSTANT_Fieldref = 9;\r\nconst CONSTANT_Methodref = 10;\r\nconst CONSTANT_InterfaceMethodref = 11;\r\nconst CONSTANT_String = 8;\r\nconst CONSTANT_Integer = 3;\r\nconst CONSTANT_Float = 4;\r\nconst CONSTANT_Long = 5;\r\nconst CONSTANT_Double = 6;\r\nconst CONSTANT_NameAndType = 12;\r\nconst CONSTANT_Utf8 = 1;\r\nconst CONSTANT_MethodHandle = 15;\r\nconst CONSTANT_MethodType = 16;\r\nconst CONSTANT_InvokeDynamic = 18;\r\n\r\nconst TAGS = {\r\n    7: \"Class\",\r\n    9: \"Fieldref\",\r\n    10: \"Methodref\",\r\n    11: \"InterfaceMethodref\",\r\n    8: \"String\",\r\n    3: \"Integer\",\r\n    4: \"Float\",\r\n    5: \"Long\",\r\n    6: \"Double\",\r\n    12: \"NameAndType\",\r\n    1: \"Utf8\",\r\n    15: \"MethodHandle\",\r\n    16: \"MethodType\",\r\n    18: \"InvokeDynamic\"\r\n}\r\n\r\nclass ConstantPool extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.resolveUTF8 = this.resolveUTF8.bind(this);\r\n        this.resolveClass = this.resolveClass.bind(this);\r\n        this.resolveNameAndType = this.resolveNameAndType.bind(this);\r\n\r\n        // TODO: Since Float and Double take up two constant pool slots, there is no longer a direct \r\n        // mapping between entry in my array and constant pool number\r\n        // Option 1: Save the constant pool number with the item and search for the number\r\n        // Option 2: Put null items after the double and float entries\r\n        \r\n    }\r\n\r\n    resolveUTF8(idx) {\r\n\r\n        return this.props.data.find(i => i['idx'] === idx)[\"bytes\"];\r\n    }\r\n\r\n    resolveClass(idx) {\r\n        return this.resolveUTF8(this.props.data.find(i => i['idx'] === idx)[\"name_index\"]);\r\n    }\r\n\r\n    resolveNameAndType(idx) {\r\n        const item = this.props.data.find(i => i['idx'] === idx);\r\n        return this.resolveUTF8(item[\"name_index\"]) + \" : \" + this.resolveUTF8(item[\"descriptor_index\"]);\r\n    }\r\n\r\n    convertToFloat(i) {\r\n        const b = new ArrayBuffer(4);\r\n        const v = new DataView(b);\r\n        v.setInt32(0, i);\r\n        return v.getFloat32(0);\r\n    }\r\n\r\n    render() {\r\n        return <CollapseItem title=\"Constant Pool\">\r\n\r\n            <table><tbody>\r\n            {this.props.data.map((c,i) => {\r\n\r\n                switch(c[\"tag\"]) {\r\n                    case CONSTANT_Class : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>name_index: {c[\"name_index\"]} ({this.resolveUTF8(c[\"name_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_Fieldref :\r\n                    case CONSTANT_Methodref :\r\n                    case CONSTANT_InterfaceMethodref : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>class_index: {c[\"class_index\"]} ({this.resolveClass(c[\"class_index\"])})</td>\r\n                                    <td>name_and_type_index: {c[\"name_and_type_index\"]} ({this.resolveNameAndType(c[\"name_and_type_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_String : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>string_index: {c[\"string_index\"]} ({this.resolveUTF8(c[\"string_index\"])})</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    case CONSTANT_Integer :{\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>{c[\"bytes\"]}</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    case CONSTANT_Float : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>{this.convertToFloat(c[\"bytes\"])}</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_Long :\r\n                    case CONSTANT_Double : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>{(c[\"high_bytes\"] << 32) + c[\"low_bytes\"]}</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    case CONSTANT_NameAndType : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>name_index: {c[\"name_index\"]} ({this.resolveUTF8(c[\"name_index\"])})</td>\r\n                                    <td>descriptor_index: {c[\"descriptor_index\"]} ({this.resolveUTF8(c[\"descriptor_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_Utf8 : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>\"{c[\"bytes\"]}\"</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_MethodHandle : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>reference_kind: {c[\"reference_kind\"]}</td>\r\n                                    <td>reference_index: {c[\"reference_index\"]}</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_MethodType : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>descriptor_index: {c[\"descriptor_index\"]} ({this.resolveUTF8(c[\"descriptor_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_InvokeDynamic: {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>bootstrap_method_attr_index: {c[\"bootstrap_method_attr_index\"]}</td>\r\n                                    <td>name_and_type_index: {c[\"name_and_type_index\"]} ({this.resolveNameAndType(c[\"name_and_type_index\"])})</td>\r\n                                </tr>;                    \r\n                        }\r\n                    default :{\r\n                        return null;\r\n                    }\r\n                }\r\n            })}\r\n            </tbody></table>\r\n        </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default ConstantPool;","import React from 'react';\r\n\r\nclass FieldItem extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            updatedValue: null\r\n        }\r\n    }\r\n\r\n    renderValue(v) {\r\n        return v !== null ? v : \"null\";\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // check if the item's events changed (and is not null)\r\n        if (this.props.event && this.props.event !== prevProps.event) {\r\n            this.setState({\r\n                updatedValue: this.props.event[\"data\"]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={\"fieldItem\" + (this.props.event !== null ? \" bold\" : \"\")}>\r\n            {this.props.data[\"desc\"]} {this.props.data[\"name\"]} = {\r\n                // if the value has changed, use that. otherwise use original\r\n                this.state.updatedValue == null \r\n                    ? this.renderValue(this.props.data[\"value\"])\r\n                    : this.renderValue(this.state.updatedValue)\r\n                }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FieldItem;","import React from 'react';\r\nimport FieldItem from '../FieldItem/FieldItem'\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass Fields extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem \r\n        \r\n                    title=\"Fields\"\r\n                    active={!!this.props.event}\r\n                ><div>\r\n            {this.props.data.length === 0 ? \"<No Fields>\" : this.props.data.map((f,i) => {\r\n                return <FieldItem \r\n                    key={i}\r\n                    data={f}\r\n                    event={this.props.event && (f[\"name\"] === this.props.event[\"name\"]) ? this.props.event : null}\r\n                    ></FieldItem>\r\n            })}\r\n        </div></CollapseItem>\r\n    }\r\n}\r\n\r\nexport default Fields;","import React from 'react';\r\n\r\nclass CodeItem extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // register the ref to the instructionRefs\r\n        const key = this.props.classNameStr + \"::\" + this.props.methodNameStr + \"::\" + this.props.data[\"pc\"];\r\n        this.props.instructionRefs[key] = this.myRef;\r\n    }\r\n\r\n    render() {\r\n        return <tr id={this.props.classNameStr + \"::\" + this.props.methodNameStr + \"::\" + this.props.data[\"pc\"]} ref={this.myRef}>\r\n            <td className={\"instrName code\" + (this.props.executingInstruction ? \" bold\" : \"\")}>{this.props.data[\"name\"]}</td>\r\n            <td className=\"instrData\" > {\"  \" + this.props.data[\"data\"].map(d => d > 0XF ? d.toString(16) : \"0\" + d.toString(16)).join(\" \")}</td>\r\n        </tr>\r\n    }\r\n}\r\n\r\nexport default CodeItem;","import React from 'react';\r\nimport CodeItem from '../CodeItem/CodeItem';\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass MethodItem extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem\r\n                    title={this.props.data[\"returns\"] + \" \" + this.props.data[\"name\"] + \"(\" + this.props.data[\"args\"].join(\", \") + \")\"}\r\n                    active={this.props.executingInstruction}\r\n                >\r\n                \r\n            {(this.props.data[\"code\"].length === 0) ? \"<empty>\" :  (this.props.data[\"code\"].map((c, idx) => <table><tbody><CodeItem \r\n                classNameStr={this.props.classNameStr}\r\n                methodNameStr={this.props.methodNameStr}\r\n                key={idx}\r\n                data={c}\r\n                executingInstruction={this.props.executingInstruction && c[\"pc\"] === this.props.executingInstruction[\"pc\"] ? this.props.executingInstruction : null}\r\n                instructionRefs={this.props.instructionRefs}\r\n            ></CodeItem></tbody></table>))}\r\n\r\n            \r\n        </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default MethodItem;","import React from 'react';\r\nimport MethodItem from '../MethodItem/MethodItem'\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass Methods extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <CollapseItem \r\n                    title=\"Methods\"\r\n                    active={!!this.props.executingInstruction}\r\n                    ><div>\r\n                {this.props.data.map((m,i) => <MethodItem \r\n                                key={i}\r\n                                data={m}\r\n                                // Only pass down if the name and description match\r\n                                executingInstruction={this.props.executingInstruction \r\n                                                        && m[\"name\"] === this.props.executingInstruction[\"methodName\"] \r\n                                                        && m[\"desc\"] === this.props.executingInstruction[\"methodDesc\"]\r\n                                                        ? this.props.executingInstruction \r\n                                                        : null\r\n                                                    }    \r\n                                instructionRefs={this.props.instructionRefs}\r\n                                classNameStr={this.props.classNameStr}\r\n                                methodNameStr={m[\"name\"]}\r\n\r\n                            ></MethodItem>)}\r\n            </div></CollapseItem>\r\n    }\r\n}\r\n\r\nexport default Methods;","import React from 'react';\r\nimport ConstantPool from '../ConstantPool/ConstantPool'\r\nimport Fields from '../Fields/Fields'\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\nimport Methods from '../Methods/Methods';\r\n\r\nclass ClassItem extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem \r\n                    title={\"Class: \" + this.props.data[\"name\"]}\r\n                    active={(this.props.executingInstruction && (this.props.executingInstruction[\"className\"] === this.props.data[\"name\"])) }\r\n                ><div>\r\n\r\n            <Methods \r\n                executingInstruction={this.props.executingInstruction}\r\n                data={this.props.data[\"methods\"]}\r\n                instructionRefs={this.props.instructionRefs}\r\n                classNameStr={this.props.data[\"name\"]}\r\n            > </Methods> \r\n\r\n            <Fields \r\n                data={this.props.data[\"fields\"]}\r\n                event={this.props.event}\r\n                ></Fields>\r\n\r\n            <ConstantPool \r\n                data={this.props.data[\"constantPool\"]}\r\n                event={this.props.event}\r\n                ></ConstantPool>\r\n\r\n            </div>\r\n        </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default ClassItem;","import React from 'react';\r\nimport ClassItem from '../ClassItem/ClassItem'\r\n\r\nclass ClassSection extends React.Component {\r\n\r\n    // has a list of classes\r\n    //(this.props.classes)\r\n\r\n    render() {\r\n        return <div className=\"classSection\" >\r\n            {this.props.classes.map((c,i)  => <ClassItem \r\n                key={i}\r\n                data={c} \r\n                // Only pass down the info if it is for this class\r\n                executingInstruction={this.props.executingInstruction && c[\"name\"] === this.props.executingInstruction.className ? this.props.executingInstruction : null}\r\n                \r\n                // Only pass events to the executing class\r\n                event={this.props.executingInstruction && c[\"name\"] === this.props.executingInstruction.className ? this.props.event : null}\r\n\r\n                instructionRefs={this.props.instructionRefs}\r\n            ></ClassItem>) }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ClassSection;","class ExecutingInstruction {\r\n\r\n    constructor(pc, className, methodName, methodDesc, diff) {\r\n        //super();\r\n        this.pc = pc;\r\n        this.className = className;\r\n        this.methodName = methodName;\r\n        this.methodDesc = methodDesc;\r\n        this.diff = diff;\r\n    }\r\n}\r\n\r\nexport default ExecutingInstruction;","class Stack {\r\n\r\n    constructor() {\r\n        this.stack = [];\r\n    }\r\n\r\n    push(frame) {\r\n        this.stack.push(frame);\r\n        return this;\r\n    }\r\n\r\n    pop() {\r\n        this.stack.pop();\r\n        return this;\r\n    }\r\n\r\n    getFrames() {\r\n        return this.stack;\r\n    }\r\n\r\n    currentFrame() {\r\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\r\n    }\r\n}\r\n\r\nexport default Stack;","class StackFrame {\r\n\r\n    constructor(methodName, className, numLocals, args) {\r\n        this.methodName = methodName;\r\n        this.className = className;\r\n        this.numLocals = numLocals;     // # ARGUMENTS + LOCAL VARLABLES\r\n        this.numArgs = args.length;\r\n        this.locals = [];\r\n        this.opStack = [];   \r\n    \r\n        // LOCALS is partitioned into [ARGUMENTS | LOCAL VARIABLES]\r\n\r\n        // Fill in the arguments\r\n        for (let a = 0; a < this.numArgs; a++) {\r\n            this.locals.push({\r\n                type: args[a][\"type\"],\r\n                index: args[a][\"index\"],\r\n                value: args[a][\"value\"]\r\n            })\r\n        }\r\n\r\n        // Fill in default for the locals (will do nothing if there are none)\r\n        for (let l = this.numArgs; l < numLocals; l++) {\r\n            this.locals.push({\r\n                type: \"?\",\r\n                index: -1,\r\n                value: \"?\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default StackFrame;","import React from 'react';\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass StackFrameComponent extends React.Component {\r\n\r\n    convertToFloat(i) {\r\n        const b = new ArrayBuffer(4);\r\n        const v = new DataView(b);\r\n        v.setInt32(0, i);\r\n        return v.getFloat32(0);\r\n    }\r\n\r\n    render() {\r\n        return <CollapseItem title={this.props.data.className + \" :: \" + this.props.data.methodName} \r\n                             active={!!this.props.active}>\r\n                        <CollapseItem title={\"Arguments\"} active={!!this.props.active}>\r\n\r\n                        {this.props.data.numArgs > 0 ? \r\n\r\n                        <table><tbody>\r\n                        {this.props.data.locals.map((a, i) => {\r\n                            if (i < this.props.data.numArgs) {\r\n                                if (a.type === \"float\")\r\n                                    return <tr className={this.props.event && i === this.props.event[\"index\"] ? \"bold\" : \"\"}><td>{a.index} | </td><td>{a.type} : </td><td>{this.convertToFloat(a.value)}</td></tr>\r\n                                else\r\n                                    return <tr className={this.props.event && i === this.props.event[\"index\"] ? \"bold\" : \"\"}><td>{a.index} | </td><td>{a.type} : </td><td>{a.value}</td></tr>\r\n                            }\r\n                            return null;\r\n                        })}\r\n                        </tbody></table>  : <div>{\"<no arguments>\"}</div>}\r\n                    </CollapseItem>\r\n                    <CollapseItem title={\"Local Variables\"} active={!!this.props.active}> \r\n                    {this.props.data.numLocals > this.props.data.numArgs ?  \r\n\r\n                        <table><tbody>\r\n                            {this.props.data.locals.map((a, i) => {\r\n                                if (i >= this.props.data.numArgs) {\r\n                                    if (a.type === \"float\")\r\n                                        return <tr className={this.props.event && i === this.props.event[\"index\"] ? \"bold\" : \"\"}><td>{a.index === -1 ? \"?\" : a.index} | </td><td>{a.type} : </td><td>{this.convertToFloat(a.value)}</td></tr>\r\n                                    else\r\n                                        return <tr className={this.props.event && i === this.props.event[\"index\"] ? \"bold\" : \"\"}><td>{a.index === -1 ? \"?\" : a.index} | </td><td>{a.type} : </td><td>{a.value}</td></tr>\r\n                                }\r\n                                return null;\r\n                            })}\r\n                            </tbody></table>  : <div>{\"<no local variables>\"}</div>}\r\n                    </CollapseItem>\r\n                    {this.props.data.opStack &&\r\n                    <CollapseItem title=\"Operand Stack\" active={!!this.props.active}>\r\n                        {this.props.data.opStack.map((s, i) => {\r\n                            if (s[\"type\"] === \"float\")\r\n                                return <div> {s[\"type\"]} : {this.convertToFloat(s[\"value\"])}</div>\r\n                            else\r\n                                return <div> {s[\"type\"]} : {s[\"value\"]}</div>\r\n                        })}\r\n                    </CollapseItem>}\r\n\r\n                </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default StackFrameComponent;","import StackFrameComponent from \"./StackFrameComponent\"\r\nimport React from 'react';\r\n\r\n\r\nclass StackComponent extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"stackSection\">\r\n            \r\n            {this.props.frames.getFrames().map((f, i) => {\r\n                return <StackFrameComponent \r\n                            key={i} \r\n                            data={f} \r\n                            active={ i === (this.props.frames.getFrames().length - 1)}\r\n                            event={ i === (this.props.frames.getFrames().length - 1) ? this.props.event : null}\r\n                        ></StackFrameComponent>\r\n            }) }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default StackComponent;","import React from 'react';\n//import executionInfo from './data/executionInfo'\nimport ClassSection from './components/ClassSection/ClassSection';\nimport ExecutingInstruction from './models/ExecutingInstruction/ExecutingInstruction';\nimport Stack from './models/Stack/Stack';\nimport StackFrame from './models/Stack/StackFrame';\nimport StackComponent from './components/Stack/StackComponent';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\n// Load the programs\nimport FibonacciRec from './data/FibonacciRec.json';\nimport FibonacciIter from './data/FibonacciIter.json';\nimport EmptyDemo from './data/EmptyDemo.json';\nimport MathDemo from './data/MathDemo.json';\nimport StringDemo from './data/StringDemo.json';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      executingInstruction: null,\n      instructions: null,\n      counter: 0,\n      eventsToDispatch: [],\n      classEvent: null,\n      stackEvent: null,\n      stack: new Stack(),\n      mode: \"single\",\n      stopped: false,\n      program: null\n    }\n\n    this.programs = [\n      {name: \"Empty Demo\", content: EmptyDemo},\n      {name: \"Fibonacci (Rec)\", content: FibonacciRec},\n      {name: \"Fibonacci (Iter)\", content: FibonacciIter},\n      {name: \"Math Demo\", content: MathDemo},\n      {name: \"String Demo\", content: StringDemo}\n    ]\n\n    this.stackCounter = 1;\n\n    this.onExecuteClick = this.onExecuteClick.bind(this);\n    this.onDispatchClick = this.onDispatchClick.bind(this);\n    this.dispatchOneEvent = this.dispatchOneEvent.bind(this);\n    this.advanceInstruction = this.advanceInstruction.bind(this);\n    this.dispatchAllEvents = this.dispatchAllEvents.bind(this);\n    this.onContinueClick = this.onContinueClick.bind(this);\n    this.onFinishMethodClick = this.onFinishMethodClick.bind(this);\n    this.onCancelClick = this.onCancelClick.bind(this);\n    this.doOneInstruction = this.doOneInstruction.bind(this);\n    this.reset = this.reset.bind(this);\n    this.doInitialEvents = this.doInitialEvents.bind(this);\n\n    this.instructionRefs = []\n  }\n\n  componentDidMount() {\n    //this.doInitialEvents();\n  }\n\n  loadProgram(data) {\n    console.log(data);\n\n    this.setState({\n      program: data,\n      instructions: data.content[\"instructions\"]\n    }, _ => this.reset())\n  }\n\n  doInitialEvents() {\n    // Set the initial instruction\n    this.advanceInstruction(this.state.counter, _ => {\n      // if there are initial events, do them\n      if (this.state.executingInstruction.diff.length > 0) {\n        this.setState({\n          eventsToDispatch: this.state.executingInstruction.diff\n        }, this.dispatchAllEvents);\n      } \n    });\n  }\n\n  dispatchOneEvent(callback) {\n    // Get the event to execute\n    const event = this.state.eventsToDispatch[0];\n\n    // Figure out when to NULL the event states\n    // DO the actual event (usually pass it down to the child component)\n    switch(event[\"operation\"]) {\n      case \"PUT_STATIC\" : {\n        this.setState({\n          classEvent: event\n        })\n\n        ToastsStore.success(\"Update static '\" + event['type'] + \" \" + event['name'] + \" ' with value '\" + event['data'] + \"'\");\n\n        break;\n      }\n\n      // Push a new stack frame onto the stack\n      case \"PUSH_STACK_FRAME\": {\n\n        // POP the numLocal elements from the previous stack frame\n        if (this.state.stack.currentFrame()) {\n          for (let i = 0; i < event[\"arguments\"].length; i++) {\n            this.state.stack.currentFrame().opStack.pop();\n          }\n        }\n\n        this.setState({\n          stack: this.state.stack.push(new StackFrame(\n            event[\"method\"],\n            event[\"class\"],\n            event[\"locals\"],\n            event[\"arguments\"]\n          ))\n        })\n\n        ToastsStore.success(\"Push stack frame for '\" + event[\"class\"] + \"::\" + event[\"method\"] + \"'\");\n\n        this.stackCounter++;\n        break;\n      }\n\n      // Pop the latest stack frame from the stack\n      case \"POP_STACK_FRAME\": {\n        this.setState({\n          stack: this.state.stack.pop(),\n          stackCounter: this.state.stackCounter - 1\n        })\n        this.stackCounter--;\n\n        ToastsStore.success(\"Pop stack frame\");\n        break;\n      }\n\n      case \"STORE_LOCAL\": {\n        // Update the value of the stack frame\n        const currentFrame = this.state.stack.currentFrame();\n        let localToUpdate = currentFrame.locals.find(f => f[\"index\"] === event[\"index\"]);\n\n        // Case 1: found item (either argument or local that has been updated already)\n        if (localToUpdate) {\n          localToUpdate[\"value\"] = event[\"value\"];\n        }\n\n        // Case 2: item not found (local that has not been seen yet)\n        else {\n          localToUpdate = currentFrame.locals.find(f => f[\"index\"] === -1);\n          localToUpdate[\"type\"] = event[\"type\"];\n          localToUpdate[\"value\"] = event[\"value\"];\n          localToUpdate[\"index\"] = event[\"index\"];\n        }\n\n        // Pass the event to the stack and update stack\n        this.setState({\n          stack: this.state.stack,\n          stackEvent: event\n        })\n\n        ToastsStore.success(\"Update local \" + event['type'] +  \" at index '\"  + event[\"index\"] + \"' with value '\" + event['value'] + \"'\");\n\n\n        break;\n      }\n\n      case \"PUSH_VAL\" : {\n        this.state.stack.currentFrame().opStack.push({\n          type: event[\"type\"],\n          value: event[\"value\"]\n        });\n\n        this.setState({\n          stack: this.state.stack\n        })\n\n        ToastsStore.success(\"Push value '\" + event['value'] + \"' to the Operand Stack\");\n\n        break;\n      }\n\n      case \"POP_VAL\" : {\n\n        this.state.stack.currentFrame().opStack.pop();\n\n        this.setState({\n          stack: this.state.stack\n        })\n\n        ToastsStore.success(\"Pop value from Operand Stack\");\n\n        break;\n      }\n\n      default : {\n        console.error(\"Event unknown: \" + event);\n      }\n    }\n\n    // Remove the element from the events queue\n    let eventsCopy = [...this.state.eventsToDispatch];\n    eventsCopy.shift();\n\n    // Do a timer here and only setState once it is done\n    // Wait 100ms and then advance \n    setTimeout(_ => {\n      this.setState({\n        eventsToDispatch: eventsCopy,\n        classEvent: null,\n        stackEvent: null\n      }, callback) // do callback once everything is allll done\n    }, 1000)\n  }\n\n  dispatchAllEvents(resolve) {\n\n    if (this.state.eventsToDispatch.length > 0) {\n\n\n      this.dispatchOneEvent(_ => {\n          // only advance the PC once the events have all been dispatched\n          if (this.state.eventsToDispatch.length === 0) {\n            \n            // Resolve promise\n            if (resolve)\n              resolve();\n\n            this.advanceInstruction(this.state.counter + 1);\n            \n          }\n          else {\n\n            // dispatch the next event\n            this.dispatchAllEvents(resolve);\n          }\n      });\n    } else {\n      // Resolve promise\n      if (resolve)\n      resolve();\n\n    this.advanceInstruction(this.state.counter + 1);\n    }\n  }\n\n  onDispatchClick() {\n\n    this.dispatchOneEvent(_ => {\n      // only advance the PC once the events have all been dispatched\n      if (this.state.eventsToDispatch.length === 0)\n        this.advanceInstruction(this.state.counter + 1);\n      });\n    }\n\n  advanceInstruction(c, fun) {\n    // Advance if possible, otherwise log that the program has ended\n    if (this.state.instructions[c]) {\n    \n      this.setState(\n        {\n          executingInstruction: new ExecutingInstruction(\n            this.state.instructions[c][\"PC\"], \n            this.state.instructions[c][\"class\"], \n            this.state.instructions[c][\"methodName\"], \n            this.state.instructions[c][\"methodDesc\"],\n            this.state.instructions[c][\"diff\"]\n          ),\n          counter: c\n        }, () => {\n\n          \n          \n          // Scroll to new instruction\n          const instr = this.state.instructions[c];\n          const key = instr[\"class\"] + \"::\" + instr[\"methodName\"] + \"::\" + instr[\"PC\"];\n\n          if (this.instructionRefs[key]) {\n            // wait a moment before scrolling\n            \n            setTimeout(_ => {\n              this.instructionRefs[key].current.scrollIntoView({block: 'center', behavior: 'smooth'});\n            }, 500)\n          }\n\n\n          // then run callback\n          if (fun)\n            fun();\n        });\n      } else {\n        ToastsStore.error(\"End of program reached, resetting.\");\n        this.reset();\n      }\n  }\n\n  reset() {\n\n    this.setState({\n      stopped: true,\n      executingInstruction: null,\n      instructions: this.state.program.content[\"instructions\"],\n      counter: 0,\n      eventsToDispatch: [],\n      classEvent: null,\n      stackEvent: null,\n      stack: new Stack(),\n      mode: \"single\",\n    }, this.doInitialEvents)\n  }\n\n  async onExecuteClick() {\n    this.setState({\n      mode: \"single\"\n    })\n    await this.doOneInstruction();\n  }\n\n  doOneInstruction() {\n    let self = this;\n    let promise = new Promise(function(resolve, reject) {\n\n        // Dispatch all events\n        self.setState({\n          eventsToDispatch: self.state.executingInstruction.diff\n        }, _ => self.dispatchAllEvents(resolve));\n\n    });\n\n    return promise;\n    \n  }\n\n  async onContinueClick() {\n    this.setState({\n      mode: \"continue\",\n      stopped: false\n    })\n\n    while (true) {\n      if (this.state.stopped) {\n        this.setState({\n          mode: \"single\",\n          stopped: false\n        })\n        return;\n      }\n\n      await this.doOneInstruction();\n    }\n\n  }\n\n  async onFinishMethodClick() {\n    this.setState({\n      mode: \"finishMethod\",\n      stopped: false\n    }, async _ => {\n      \n    this.stackCounter = 1;\n\n    while(this.stackCounter > 0 && this.state.mode === \"finishMethod\") {\n      await this.doOneInstruction();\n    }\n\n    this.setState({\n      mode: \"single\",\n      stopped: false\n    })\n    })\n  }\n\n  onCancelClick() {\n    this.setState({\n      stopped: true,\n      mode: \"single\"\n    })\n  }\n\n  render() {\n    return <div className=\"App\">\n    \n      <Row noGutters={true} style={{height: \"5vh\", paddingTop: \"5px\"}}>\n      <Col><h2 style={{float: \"left\", marginLeft: \"5px\"}} >Hawkbeans Debugger</h2></Col>\n          <Col>\n            <Dropdown as={ButtonGroup} style={{float: \"right\", marginRight: \"5px\"}}>\n              {this.state.mode === \"single\" ? \n                <Button disabled={this.state.eventsToDispatch.length > 0} variant=\"success\" onClick={this.onExecuteClick}>Step</Button>\n              : <Button variant=\"danger\" onClick={this.onCancelClick}>Stop</Button>\n              }\n              <Dropdown.Toggle split variant={this.state.mode === \"single\" ? \"success\" : \"danger\"} id=\"dropdown-split-basic\" disabled={this.state.eventsToDispatch.length > 0} />\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={this.onContinueClick}>Continue</Dropdown.Item>\n                <Dropdown.Item onClick={this.onFinishMethodClick}> Finish Method</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          <Col>\n\n          <DropdownButton id=\"dropdown-basic-button\" title=\"Select Program\">\n            {this.programs.map((p) => {\n              return <Dropdown.Item name={p[\"name\"]} onClick={_ => this.loadProgram(p)}>{p[\"name\"]}</Dropdown.Item>\n            })}\n          </DropdownButton>\n\n          </Col>\n\n          <Col><Button style={{float: \"right\", marginRight: \"5px\"}} href=\"https://github.com/petermenke/HawkbeansDebugger\" variant=\"info\">View Github Page</Button></Col>\n\n    </Row>\n    \n    <Row noGutters={true}>\n      <Col >\n          <Row  noGutters={true} style={{height: \"5vh\"}}>\n            <h2 className=\"text-center\" style={{width: \"100%\"}}>Class Info</h2>   \n          </Row>\n          <Row noGutters={true}>\n            <ClassSection classes={this.state.program ? this.state.program.content[\"classes\"] : []} executingInstruction={this.state.executingInstruction} event={this.state.classEvent} instructionRefs={this.instructionRefs}/>\n          </Row>\n      </Col>\n      <Col>\n        <Row  noGutters={true} style={{height: \"5vh\"}}>\n          <h2 className=\"text-center\" style={{width: \"100%\"}}>Stack</h2>   \n        </Row>\n\n        <Row noGutters={true}>\n          <StackComponent frames={this.state.stack} event={this.state.stackEvent}></StackComponent>\n        </Row>\n      </Col>\n    \n    </Row>\n    <ToastsContainer store={ToastsStore}/>\n    </div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}