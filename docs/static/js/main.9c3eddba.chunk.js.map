{"version":3,"sources":["components/CollapseItem/CollapseItem.js","components/ConstantPool/ConstantPool.js","components/FieldItem/FieldItem.js","components/Fields/Fields.js","components/CodeItem/CodeItem.js","components/MethodItem/MethodItem.js","components/Methods/Methods.js","components/ClassItem/ClassItem.js","components/ClassSection/ClassSection.js","models/ExecutingInstruction/ExecutingInstruction.js","models/Stack/Stack.js","models/Stack/StackFrame.js","components/Stack/StackFrameComponent.js","components/Stack/StackComponent.js","App.js","index.js"],"names":["CollapseItem","state","open","onClickTitle","bind","this","setState","Card","bg","href","className","onClick","e","preventDefault","Header","props","active","title","Body","Collapse","in","children","React","Component","TAGS","7","9","10","11","8","3","4","5","6","12","1","15","16","18","ConstantPool","resolveUTF8","resolveClass","resolveNameAndType","idx","data","find","i","item","map","c","key","FieldItem","updatedValue","v","prevProps","event","renderValue","Fields","length","f","CodeItem","myRef","createRef","classNameStr","methodNameStr","instructionRefs","id","ref","executingInstruction","d","toString","join","MethodItem","Methods","m","ClassItem","ClassSection","classes","ExecutingInstruction","pc","methodName","methodDesc","diff","Stack","stack","frame","push","pop","StackFrame","numLocals","args","numArgs","locals","opStack","a","type","index","value","l","StackFrameComponent","s","StackComponent","frames","getFrames","App","instructions","counter","eventsToDispatch","classEvent","stackEvent","mode","stopped","program","programs","name","content","basic","other","stackCounter","onExecuteClick","onDispatchClick","dispatchOneEvent","advanceInstruction","dispatchAllEvents","onContinueClick","onFinishMethodClick","onCancelClick","doOneInstruction","reset","doInitialEvents","console","log","_","callback","ToastsStore","success","currentFrame","localToUpdate","error","eventsCopy","shift","setTimeout","resolve","fun","instr","current","scrollIntoView","block","behavior","self","Promise","reject","Row","noGutters","style","height","paddingTop","Col","Dropdown","as","ButtonGroup","float","marginRight","Button","disabled","variant","Toggle","split","Menu","Item","DropdownButton","p","loadProgram","width","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c3eddba.chunk.js","sourcesContent":["import React from 'react';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass CollapseItem extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false\r\n        }\r\n\r\n        this.onClickTitle = this.onClickTitle.bind(this);\r\n    }\r\n\r\n    onClickTitle() {\r\n        this.setState({open: !this.state.open});\r\n    }\r\n\r\n    render() {\r\n        \r\n        return <Card bg=\"light\"  >\r\n                <a href=\"#\" className=\"noLinkStyle\" onClick={e => e.preventDefault()}><Card.Header onClick={this.onClickTitle}>\r\n                    <div \r\n                        className={(this.props.active ? \"active\" : \"\")}\r\n                    >{this.props.title}</div>\r\n                </Card.Header></a>\r\n\r\n                <Card.Body className=\"cardBody\">\r\n                    <div className=\"collapseContainer\">\r\n                        <Collapse in={!!this.state.open || !!this.props.active}>\r\n                            <div>{this.props.children}</div>\r\n                        </Collapse>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n    }\r\n}\r\n\r\nexport default CollapseItem;","import React from 'react';\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nconst CONSTANT_Class = 7;\r\nconst CONSTANT_Fieldref = 9;\r\nconst CONSTANT_Methodref = 10;\r\nconst CONSTANT_InterfaceMethodref = 11;\r\nconst CONSTANT_String = 8;\r\nconst CONSTANT_Integer = 3;\r\nconst CONSTANT_Float = 4;\r\nconst CONSTANT_Long = 5;\r\nconst CONSTANT_Double = 6;\r\nconst CONSTANT_NameAndType = 12;\r\nconst CONSTANT_Utf8 = 1;\r\nconst CONSTANT_MethodHandle = 15;\r\nconst CONSTANT_MethodType = 16;\r\nconst CONSTANT_InvokeDynamic = 18;\r\n\r\nconst TAGS = {\r\n    7: \"Class\",\r\n    9: \"Fieldref\",\r\n    10: \"Methodref\",\r\n    11: \"InterfaceMethodref\",\r\n    8: \"String\",\r\n    3: \"Integer\",\r\n    4: \"Float\",\r\n    5: \"Long\",\r\n    6: \"Double\",\r\n    12: \"NameAndType\",\r\n    1: \"Utf8\",\r\n    15: \"MethodHandle\",\r\n    16: \"MethodType\",\r\n    18: \"InvokeDynamic\"\r\n}\r\n\r\nclass ConstantPool extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.resolveUTF8 = this.resolveUTF8.bind(this);\r\n        this.resolveClass = this.resolveClass.bind(this);\r\n        this.resolveNameAndType = this.resolveNameAndType.bind(this);\r\n\r\n        // TODO: Since Float and Double take up two constant pool slots, there is no longer a direct \r\n        // mapping between entry in my array and constant pool number\r\n        // Option 1: Save the constant pool number with the item and search for the number\r\n        // Option 2: Put null items after the double and float entries\r\n        \r\n    }\r\n\r\n    resolveUTF8(idx) {\r\n\r\n        return this.props.data.find(i => i['idx'] === idx)[\"bytes\"];\r\n    }\r\n\r\n    resolveClass(idx) {\r\n        return this.resolveUTF8(this.props.data.find(i => i['idx'] === idx)[\"name_index\"]);\r\n    }\r\n\r\n    resolveNameAndType(idx) {\r\n        const item = this.props.data.find(i => i['idx'] === idx);\r\n        return this.resolveUTF8(item[\"name_index\"]) + \" : \" + this.resolveUTF8(item[\"descriptor_index\"]);\r\n    }\r\n\r\n    render() {\r\n        return <CollapseItem title=\"Constant Pool\">\r\n\r\n            <table><tbody>\r\n            {this.props.data.map((c,i) => {\r\n\r\n                switch(c[\"tag\"]) {\r\n                    case CONSTANT_Class : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>name_index: {c[\"name_index\"]} ({this.resolveUTF8(c[\"name_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_Fieldref :\r\n                    case CONSTANT_Methodref :\r\n                    case CONSTANT_InterfaceMethodref : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>class_index: {c[\"class_index\"]} ({this.resolveClass(c[\"class_index\"])})</td>\r\n                                    <td>name_and_type_index: {c[\"name_and_type_index\"]} ({this.resolveNameAndType(c[\"name_and_type_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_String : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>string_index: {c[\"string_index\"]} ({this.resolveUTF8(c[\"string_index\"])})</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_Integer :\r\n                    case CONSTANT_Float : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>{c[\"bytes\"]}</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_Long :\r\n                    case CONSTANT_Double : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>{(c[\"high_bytes\"] << 32) + c[\"low_bytes\"]}</td>\r\n                                </tr>;\r\n\r\n                    }\r\n\r\n                    case CONSTANT_NameAndType : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>name_index: {c[\"name_index\"]} ({this.resolveUTF8(c[\"name_index\"])})</td>\r\n                                    <td>descriptor_index: {c[\"descriptor_index\"]} ({this.resolveUTF8(c[\"descriptor_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_Utf8 : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>\"{c[\"bytes\"]}\"</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_MethodHandle : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>reference_kind: {c[\"reference_kind\"]}</td>\r\n                                    <td>reference_index: {c[\"reference_index\"]}</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    case CONSTANT_MethodType : {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>descriptor_index: {c[\"descriptor_index\"]} ({this.resolveUTF8(c[\"descriptor_index\"])})</td>\r\n                                </tr>;\r\n                    }\r\n\r\n                    // NOT TESTED\r\n                    case CONSTANT_InvokeDynamic: {\r\n                        return <tr key={i}>\r\n                                    <td>{c[\"idx\"]}</td>\r\n                                    <td>{TAGS[c[\"tag\"]]}</td>\r\n                                    <td>bootstrap_method_attr_index: {c[\"bootstrap_method_attr_index\"]}</td>\r\n                                    <td>name_and_type_index: {c[\"name_and_type_index\"]} ({this.resolveNameAndType(c[\"name_and_type_index\"])})</td>\r\n                                </tr>;                    \r\n                        }\r\n                    default :{\r\n                        return null;\r\n                    }\r\n                }\r\n            })}\r\n            </tbody></table>\r\n        </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default ConstantPool;","import React from 'react';\r\n\r\nclass FieldItem extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            updatedValue: null\r\n        }\r\n    }\r\n\r\n    renderValue(v) {\r\n        return v !== null ? v : \"null\";\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // check if the item's events changed (and is not null)\r\n        if (this.props.event && this.props.event !== prevProps.event) {\r\n            this.setState({\r\n                updatedValue: this.props.event[\"data\"]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={\"fieldItem\" + (this.props.event !== null ? \" bold\" : \"\")}>\r\n            {this.props.data[\"desc\"]} {this.props.data[\"name\"]} = {\r\n                // if the value has changed, use that. otherwise use original\r\n                this.state.updatedValue == null \r\n                    ? this.renderValue(this.props.data[\"value\"])\r\n                    : this.renderValue(this.state.updatedValue)\r\n                }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FieldItem;","import React from 'react';\r\nimport FieldItem from '../FieldItem/FieldItem'\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass Fields extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem \r\n        \r\n                    title=\"Fields\"\r\n                    active={!!this.props.event}\r\n                ><div>\r\n            {this.props.data.length === 0 ? \"<No Fields>\" : this.props.data.map((f,i) => {\r\n                return <FieldItem \r\n                    key={i}\r\n                    data={f}\r\n                    event={this.props.event && (f[\"name\"] === this.props.event[\"name\"]) ? this.props.event : null}\r\n                    ></FieldItem>\r\n            })}\r\n        </div></CollapseItem>\r\n    }\r\n}\r\n\r\nexport default Fields;","import React from 'react';\r\n\r\nclass CodeItem extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // register the ref to the instructionRefs\r\n        const key = this.props.classNameStr + \"::\" + this.props.methodNameStr + \"::\" + this.props.data[\"pc\"];\r\n        this.props.instructionRefs[key] = this.myRef;\r\n    }\r\n\r\n    render() {\r\n        return <div id={this.props.classNameStr + \"::\" + this.props.methodNameStr + \"::\" + this.props.data[\"pc\"]} ref={this.myRef}>\r\n            <div className={\"instrName code\" + (this.props.executingInstruction ? \" bold\" : \"\")}>{this.props.data[\"name\"]}</div>\r\n            <div className=\"instrData\" >{this.props.data[\"data\"].map(d => d > 0XF ? d.toString(16) : \"0\" + d.toString(16)).join(\" \")}</div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CodeItem;","import React from 'react';\r\nimport CodeItem from '../CodeItem/CodeItem';\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass MethodItem extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem\r\n                    title={this.props.data[\"returns\"] + \" \" + this.props.data[\"name\"] + \"(\" + this.props.data[\"args\"].join(\", \") + \")\"}\r\n                    active={this.props.executingInstruction}\r\n                >\r\n                <div>\r\n            {(this.props.data[\"code\"].length === 0) ? \"<empty>\" :  (this.props.data[\"code\"].map((c, idx) => <CodeItem \r\n                classNameStr={this.props.classNameStr}\r\n                methodNameStr={this.props.methodNameStr}\r\n                key={idx}\r\n                data={c}\r\n                executingInstruction={this.props.executingInstruction && c[\"pc\"] === this.props.executingInstruction[\"pc\"] ? this.props.executingInstruction : null}\r\n                instructionRefs={this.props.instructionRefs}\r\n            ></CodeItem>))}\r\n\r\n            \r\n        </div></CollapseItem>\r\n    }\r\n}\r\n\r\nexport default MethodItem;","import React from 'react';\r\nimport MethodItem from '../MethodItem/MethodItem'\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass Methods extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <CollapseItem \r\n                    title=\"Methods\"\r\n                    active={!!this.props.executingInstruction}\r\n                    ><div>\r\n                {this.props.data.map((m,i) => <MethodItem \r\n                                key={i}\r\n                                data={m}\r\n                                // Only pass down if the name and description match\r\n                                executingInstruction={this.props.executingInstruction \r\n                                                        && m[\"name\"] === this.props.executingInstruction[\"methodName\"] \r\n                                                        && m[\"desc\"] === this.props.executingInstruction[\"methodDesc\"]\r\n                                                        ? this.props.executingInstruction \r\n                                                        : null\r\n                                                    }    \r\n                                instructionRefs={this.props.instructionRefs}\r\n                                classNameStr={this.props.classNameStr}\r\n                                methodNameStr={m[\"name\"]}\r\n\r\n                            ></MethodItem>)}\r\n            </div></CollapseItem>\r\n    }\r\n}\r\n\r\nexport default Methods;","import React from 'react';\r\nimport ConstantPool from '../ConstantPool/ConstantPool'\r\nimport Fields from '../Fields/Fields'\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\nimport Methods from '../Methods/Methods';\r\n\r\nclass ClassItem extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem \r\n                    title={\"Class: \" + this.props.data[\"name\"]}\r\n                    active={(this.props.executingInstruction && (this.props.executingInstruction[\"className\"] === this.props.data[\"name\"])) }\r\n                ><div>\r\n\r\n            <Methods \r\n                executingInstruction={this.props.executingInstruction}\r\n                data={this.props.data[\"methods\"]}\r\n                instructionRefs={this.props.instructionRefs}\r\n                classNameStr={this.props.data[\"name\"]}\r\n            > </Methods> \r\n\r\n            <Fields \r\n                data={this.props.data[\"fields\"]}\r\n                event={this.props.event}\r\n                ></Fields>\r\n\r\n            <ConstantPool \r\n                data={this.props.data[\"constantPool\"]}\r\n                event={this.props.event}\r\n                ></ConstantPool>\r\n\r\n            </div>\r\n        </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default ClassItem;","import React from 'react';\r\nimport ClassItem from '../ClassItem/ClassItem'\r\n\r\nclass ClassSection extends React.Component {\r\n\r\n    // has a list of classes\r\n    //(this.props.classes)\r\n\r\n    render() {\r\n        return <div className=\"classSection\" >\r\n            {this.props.classes.map((c,i)  => <ClassItem \r\n                key={i}\r\n                data={c} \r\n                // Only pass down the info if it is for this class\r\n                executingInstruction={this.props.executingInstruction && c[\"name\"] === this.props.executingInstruction.className ? this.props.executingInstruction : null}\r\n                \r\n                // Only pass events to the executing class\r\n                event={this.props.executingInstruction && c[\"name\"] === this.props.executingInstruction.className ? this.props.event : null}\r\n\r\n                instructionRefs={this.props.instructionRefs}\r\n            ></ClassItem>) }\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default ClassSection;","class ExecutingInstruction {\r\n\r\n    constructor(pc, className, methodName, methodDesc, diff) {\r\n        //super();\r\n        this.pc = pc;\r\n        this.className = className;\r\n        this.methodName = methodName;\r\n        this.methodDesc = methodDesc;\r\n        this.diff = diff;\r\n    }\r\n}\r\n\r\nexport default ExecutingInstruction;","class Stack {\r\n\r\n    constructor() {\r\n        this.stack = [];\r\n    }\r\n\r\n    push(frame) {\r\n        this.stack.push(frame);\r\n        return this;\r\n    }\r\n\r\n    pop() {\r\n        this.stack.pop();\r\n        return this;\r\n    }\r\n\r\n    getFrames() {\r\n        return this.stack;\r\n    }\r\n\r\n    currentFrame() {\r\n        return this.stack.length > 0 ? this.stack[this.stack.length - 1] : null;\r\n    }\r\n}\r\n\r\nexport default Stack;","class StackFrame {\r\n\r\n    constructor(methodName, className, numLocals, args) {\r\n        this.methodName = methodName;\r\n        this.className = className;\r\n        this.numLocals = numLocals;     // # ARGUMENTS + LOCAL VARLABLES\r\n        this.numArgs = args.length;\r\n        this.locals = [];\r\n        this.opStack = [];   \r\n    \r\n        // LOCALS is partitioned into [ARGUMENTS | LOCAL VARIABLES]\r\n\r\n        // Fill in the arguments\r\n        for (let a = 0; a < this.numArgs; a++) {\r\n            this.locals.push({\r\n                type: args[a][\"type\"],\r\n                index: args[a][\"index\"],\r\n                value: args[a][\"value\"]\r\n            })\r\n        }\r\n\r\n        // Fill in default for the locals (will do nothing if there are none)\r\n        for (let l = this.numArgs; l < numLocals; l++) {\r\n            this.locals.push({\r\n                type: \"?\",\r\n                index: -1,\r\n                value: \"?\"\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default StackFrame;","import React from 'react';\r\nimport CollapseItem from '../CollapseItem/CollapseItem'\r\n\r\nclass StackFrameComponent extends React.Component {\r\n\r\n    render() {\r\n        return <CollapseItem title={this.props.data.className + \" :: \" + this.props.data.methodName} \r\n                             active={!!this.props.active}>\r\n                        <CollapseItem title={\"Arguments\"} active={!!this.props.active}>\r\n\r\n                        {this.props.data.numArgs > 0 ? \r\n\r\n                        <table><tbody>\r\n                        {this.props.data.locals.map((a, i) => {\r\n                            if (i < this.props.data.numArgs) {\r\n                                return <tr className={this.props.event && i === this.props.event[\"index\"] ? \"bold\" : \"\"}><td>{a.index}: </td><td>{a.type} - </td><td>{a.value}</td></tr>\r\n                            }\r\n                            return null;\r\n                        })}\r\n                        </tbody></table>  : <div>{\"<no arguments>\"}</div>}\r\n                    </CollapseItem>\r\n                    <CollapseItem title={\"Local Variables\"} active={!!this.props.active}> \r\n                    {this.props.data.numLocals > this.props.data.numArgs ?  \r\n\r\n                        <table><tbody>\r\n                            {this.props.data.locals.map((a, i) => {\r\n                                if (i >= this.props.data.numArgs) {\r\n                                    return <tr className={this.props.event && i === this.props.event[\"index\"] ? \"bold\" : \"\"}><td>{a.index}: </td><td>{a.type} - </td><td>{a.value}</td></tr>\r\n                                }\r\n                                return null;\r\n                            })}\r\n                            </tbody></table>  : <div>{\"<no local variables>\"}</div>}\r\n                    </CollapseItem>\r\n                    {this.props.data.opStack &&\r\n                    <CollapseItem title=\"Operand Stack\" active={!!this.props.active}>\r\n                        {this.props.data.opStack.map((s, i) => {\r\n                            return <div> {s[\"type\"]} : {s[\"value\"]}</div>\r\n                        })}\r\n                    </CollapseItem>}\r\n\r\n                </CollapseItem>\r\n    }\r\n}\r\n\r\nexport default StackFrameComponent;","import StackFrameComponent from \"./StackFrameComponent\"\r\nimport React from 'react';\r\n\r\n\r\nclass StackComponent extends React.Component {\r\n\r\n    render() {\r\n        return <div className=\"stackSection\">\r\n            \r\n            {this.props.frames.getFrames().map((f, i) => {\r\n                return <StackFrameComponent \r\n                            key={i} \r\n                            data={f} \r\n                            active={ i === (this.props.frames.getFrames().length - 1)}\r\n                            event={ i === (this.props.frames.getFrames().length - 1) ? this.props.event : null}\r\n                        ></StackFrameComponent>\r\n            }) }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default StackComponent;","import React from 'react';\n//import executionInfo from './data/executionInfo'\nimport ClassSection from './components/ClassSection/ClassSection';\nimport ExecutingInstruction from './models/ExecutingInstruction/ExecutingInstruction';\nimport Stack from './models/Stack/Stack';\nimport StackFrame from './models/Stack/StackFrame';\nimport StackComponent from './components/Stack/StackComponent';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\n\n// Load the programs\nimport basic from './data/executionInfo';\nimport other from './data/executionInfo';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      executingInstruction: null,\n      instructions: null,\n      counter: 0,\n      eventsToDispatch: [],\n      classEvent: null,\n      stackEvent: null,\n      stack: new Stack(),\n      mode: \"single\",\n      stopped: false,\n      program: null\n    }\n\n    this.programs = [\n      {name: \"basic\", content: basic},\n      {name: \"other\", content: other}\n    ]\n\n    this.stackCounter = 1;\n\n    this.onExecuteClick = this.onExecuteClick.bind(this);\n    this.onDispatchClick = this.onDispatchClick.bind(this);\n    this.dispatchOneEvent = this.dispatchOneEvent.bind(this);\n    this.advanceInstruction = this.advanceInstruction.bind(this);\n    this.dispatchAllEvents = this.dispatchAllEvents.bind(this);\n    this.onContinueClick = this.onContinueClick.bind(this);\n    this.onFinishMethodClick = this.onFinishMethodClick.bind(this);\n    this.onCancelClick = this.onCancelClick.bind(this);\n    this.doOneInstruction = this.doOneInstruction.bind(this);\n    this.reset = this.reset.bind(this);\n    this.doInitialEvents = this.doInitialEvents.bind(this);\n\n    this.instructionRefs = []\n  }\n\n  componentDidMount() {\n    //this.doInitialEvents();\n  }\n\n  loadProgram(data) {\n    console.log(data);\n\n    this.setState({\n      program: data,\n      instructions: data.content[\"instructions\"]\n    }, _ => this.reset())\n  }\n\n  doInitialEvents() {\n    // Set the initial instruction\n    this.advanceInstruction(this.state.counter, _ => {\n      // if there are initial events, do them\n      if (this.state.executingInstruction.diff.length > 0) {\n        this.setState({\n          eventsToDispatch: this.state.executingInstruction.diff\n        }, this.dispatchAllEvents);\n      } \n    });\n  }\n\n  dispatchOneEvent(callback) {\n    // Get the event to execute\n    const event = this.state.eventsToDispatch[0];\n\n    // Figure out when to NULL the event states\n    // DO the actual event (usually pass it down to the child component)\n    switch(event[\"operation\"]) {\n      case \"PUT_STATIC\" : {\n        this.setState({\n          classEvent: event\n        })\n\n        ToastsStore.success(\"Update static '\" + event['type'] + \" \" + event['name'] + \" ' with value '\" + event['data'] + \"'\");\n\n        break;\n      }\n\n      // Push a new stack frame onto the stack\n      case \"PUSH_STACK_FRAME\": {\n\n        // POP the numLocal elements from the previous stack frame\n        if (this.state.stack.currentFrame()) {\n          for (let i = 0; i < event[\"arguments\"].length; i++) {\n            this.state.stack.currentFrame().opStack.pop();\n          }\n        }\n\n        this.setState({\n          stack: this.state.stack.push(new StackFrame(\n            event[\"method\"],\n            event[\"class\"],\n            event[\"locals\"],\n            event[\"arguments\"]\n          ))\n        })\n\n        ToastsStore.success(\"Push stack frame for '\" + event[\"class\"] + \"::\" + event[\"method\"] + \"'\");\n\n        this.stackCounter++;\n        break;\n      }\n\n      // Pop the latest stack frame from the stack\n      case \"POP_STACK_FRAME\": {\n        this.setState({\n          stack: this.state.stack.pop(),\n          stackCounter: this.state.stackCounter - 1\n        })\n        this.stackCounter--;\n\n        ToastsStore.success(\"Pop stack frame\");\n        break;\n      }\n\n      case \"STORE_LOCAL\": {\n        // Update the value of the stack frame\n        const currentFrame = this.state.stack.currentFrame();\n        let localToUpdate = currentFrame.locals.find(f => f[\"index\"] === event[\"index\"]);\n\n        // Case 1: found item (either argument or local that has been updated already)\n        if (localToUpdate) {\n          localToUpdate[\"value\"] = event[\"value\"];\n        }\n\n        // Case 2: item not found (local that has not been seen yet)\n        else {\n          localToUpdate = currentFrame.locals.find(f => f[\"index\"] === -1);\n          localToUpdate[\"type\"] = event[\"type\"];\n          localToUpdate[\"value\"] = event[\"value\"];\n          localToUpdate[\"index\"] = event[\"index\"];\n        }\n\n        // Pass the event to the stack and update stack\n        this.setState({\n          stack: this.state.stack,\n          stackEvent: event\n        })\n\n        ToastsStore.success(\"Update local \" + event['type'] +  \" at index '\"  + event[\"index\"] + \"' with value '\" + event['value'] + \"'\");\n\n\n        break;\n      }\n\n      case \"PUSH_VAL\" : {\n        this.state.stack.currentFrame().opStack.push({\n          type: event[\"type\"],\n          value: event[\"value\"]\n        });\n\n        this.setState({\n          stack: this.state.stack\n        })\n\n        ToastsStore.success(\"Push value '\" + event['value'] + \"' to the Operand Stack\");\n\n        break;\n      }\n\n      case \"POP_VAL\" : {\n\n        this.state.stack.currentFrame().opStack.pop();\n\n        this.setState({\n          stack: this.state.stack\n        })\n\n        ToastsStore.success(\"Pop value from Operand Stack\");\n\n        break;\n      }\n\n      default : {\n        console.error(\"Event unknown: \" + event);\n      }\n    }\n\n    // Remove the element from the events queue\n    let eventsCopy = [...this.state.eventsToDispatch];\n    eventsCopy.shift();\n\n    // Do a timer here and only setState once it is done\n    // Wait 100ms and then advance \n    setTimeout(_ => {\n      this.setState({\n        eventsToDispatch: eventsCopy,\n        classEvent: null,\n        stackEvent: null\n      }, callback) // do callback once everything is allll done\n    }, 1000)\n  }\n\n  dispatchAllEvents(resolve) {\n\n    if (this.state.eventsToDispatch.length > 0) {\n\n\n      this.dispatchOneEvent(_ => {\n          // only advance the PC once the events have all been dispatched\n          if (this.state.eventsToDispatch.length === 0) {\n            \n            // Resolve promise\n            if (resolve)\n              resolve();\n\n            this.advanceInstruction(this.state.counter + 1);\n            \n          }\n          else {\n\n            // dispatch the next event\n            this.dispatchAllEvents(resolve);\n          }\n      });\n    } else {\n      // Resolve promise\n      if (resolve)\n      resolve();\n\n    this.advanceInstruction(this.state.counter + 1);\n    }\n  }\n\n  onDispatchClick() {\n\n    this.dispatchOneEvent(_ => {\n      // only advance the PC once the events have all been dispatched\n      if (this.state.eventsToDispatch.length === 0)\n        this.advanceInstruction(this.state.counter + 1);\n      });\n    }\n\n  advanceInstruction(c, fun) {\n    // Advance if possible, otherwise log that the program has ended\n    if (this.state.instructions[c]) {\n    \n      this.setState(\n        {\n          executingInstruction: new ExecutingInstruction(\n            this.state.instructions[c][\"PC\"], \n            this.state.instructions[c][\"class\"], \n            this.state.instructions[c][\"methodName\"], \n            this.state.instructions[c][\"methodDesc\"],\n            this.state.instructions[c][\"diff\"]\n          ),\n          counter: c\n        }, () => {\n\n          \n          \n          // Scroll to new instruction\n          const instr = this.state.instructions[c];\n          const key = instr[\"class\"] + \"::\" + instr[\"methodName\"] + \"::\" + instr[\"PC\"];\n\n          if (this.instructionRefs[key]) {\n            // wait a moment before scrolling\n            \n            setTimeout(_ => {\n              this.instructionRefs[key].current.scrollIntoView({block: 'center', behavior: 'smooth'});\n            }, 500)\n          }\n\n\n          // then run callback\n          if (fun)\n            fun();\n        });\n      } else {\n        ToastsStore.error(\"End of program reached, resetting.\");\n        this.reset();\n      }\n  }\n\n  reset() {\n\n    this.setState({\n      stopped: true,\n      executingInstruction: null,\n      instructions: this.state.program.content[\"instructions\"],\n      counter: 0,\n      eventsToDispatch: [],\n      classEvent: null,\n      stackEvent: null,\n      stack: new Stack(),\n      mode: \"single\",\n    }, this.doInitialEvents)\n  }\n\n  async onExecuteClick() {\n    this.setState({\n      mode: \"single\"\n    })\n    await this.doOneInstruction();\n  }\n\n  doOneInstruction() {\n    let self = this;\n    let promise = new Promise(function(resolve, reject) {\n\n        // Dispatch all events\n        self.setState({\n          eventsToDispatch: self.state.executingInstruction.diff\n        }, _ => self.dispatchAllEvents(resolve));\n\n    });\n\n    return promise;\n    \n  }\n\n  async onContinueClick() {\n    this.setState({\n      mode: \"continue\",\n      stopped: false\n    })\n\n    while (true) {\n      if (this.state.stopped) {\n        this.setState({\n          mode: \"single\",\n          stopped: false\n        })\n        return;\n      }\n\n      await this.doOneInstruction();\n    }\n\n  }\n\n  async onFinishMethodClick() {\n    this.setState({\n      mode: \"finishMethod\",\n      stopped: false\n    })\n\n    this.stackCounter = 1;\n\n    while(this.stackCounter > 0) {\n      await this.doOneInstruction();\n    }\n\n    this.setState({\n      mode: \"single\",\n      stopped: false\n    })\n  }\n\n  onCancelClick() {\n    this.setState({\n      stopped: true,\n      mode: \"single\"\n    })\n  }\n\n  render() {\n    return <div className=\"App\">\n    \n      <Row noGutters={true} style={{height: \"5vh\", paddingTop: \"5px\"}}>\n          <Col>\n            <Dropdown as={ButtonGroup} style={{float: \"right\", marginRight: \"5px\"}}>\n              {this.state.mode === \"single\" ? \n                <Button disabled={this.state.eventsToDispatch.length > 0} variant=\"success\" onClick={this.onExecuteClick}>Step</Button>\n              : <Button variant=\"danger\" onClick={this.onCancelClick}>Stop</Button>\n              }\n              <Dropdown.Toggle split variant={this.state.mode === \"single\" ? \"success\" : \"danger\"} id=\"dropdown-split-basic\" disabled={this.state.eventsToDispatch.length > 0} />\n\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={this.onContinueClick}>Continue</Dropdown.Item>\n                <Dropdown.Item onClick={this.onFinishMethodClick}> Finish Method</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n\n          <Col>\n\n          <DropdownButton id=\"dropdown-basic-button\" title=\"Select Program\">\n            {this.programs.map((p) => {\n              return <Dropdown.Item name={p[\"name\"]} onClick={_ => this.loadProgram(p)}>{p[\"name\"]}</Dropdown.Item>\n            })}\n          </DropdownButton>\n\n          </Col>\n    </Row>\n    \n    <Row noGutters={true}>\n      <Col >\n          <Row  noGutters={true} style={{height: \"5vh\"}}>\n            <h2 className=\"text-center\" style={{width: \"100%\"}}>Class Info</h2>   \n          </Row>\n          <Row noGutters={true}>\n            <ClassSection classes={this.state.program ? this.state.program.content[\"classes\"] : []} executingInstruction={this.state.executingInstruction} event={this.state.classEvent} instructionRefs={this.instructionRefs}/>\n          </Row>\n      </Col>\n      <Col>\n        <Row  noGutters={true} style={{height: \"5vh\"}}>\n          <h2 className=\"text-center\" style={{width: \"100%\"}}>Stack</h2>   \n        </Row>\n\n        <Row noGutters={true}>\n          <StackComponent frames={this.state.stack} event={this.state.stackEvent}></StackComponent>\n        </Row>\n      </Col>\n    \n    </Row>\n    <ToastsContainer store={ToastsStore}/>\n    </div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}